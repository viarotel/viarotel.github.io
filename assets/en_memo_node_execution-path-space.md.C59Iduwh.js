import{_ as i,c as a,o as e,au as n}from"./chunks/framework.X-mT4JZr.js";const k=JSON.parse('{"title":"在 Node.js 中使用 child_process.exec 或 child_process.spawn 执行包含空格的程序路径","description":"","frontmatter":{"title":"在 Node.js 中使用 child_process.exec 或 child_process.spawn 执行包含空格的程序路径"},"headers":[],"relativePath":"en/memo/node/execution-path-space.md","filePath":"en/memo/node/execution-path-space.md","lastUpdated":1743607123000}'),p={name:"en/memo/node/execution-path-space.md"};function t(l,s,h,c,d,o){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="在-node-js-中使用-child-process-exec-或-child-process-spawn-执行包含空格的程序路径" tabindex="-1">在 Node.js 中使用 child_process.exec 或 child_process.spawn 执行包含空格的程序路径 <a class="header-anchor" href="#在-node-js-中使用-child-process-exec-或-child-process-spawn-执行包含空格的程序路径" aria-label="Permalink to &quot;在 Node.js 中使用 child_process.exec 或 child_process.spawn 执行包含空格的程序路径&quot;">​</a></h1><p>使用 <code>&quot;&quot;</code> 包裹可执行文件路径</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;child_process&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;C:/Program Files/myApp.exe&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">spawn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;C:/Program Files/myApp.exe&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,3)]))}const E=i(p,[["render",t]]);export{k as __pageData,E as default};
